// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ResourceDetail component renders component renders default props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResourceDetail
    datasetTitle=""
    formData={Object {}}
    onEmptyResource={[MockFunction]}
    onSetResourceToDataset={[MockFunction]}
    schema={
      Object {
        "default": Array [],
        "items": Object {
          "properties": Object {
            "ams:resourceType": Object {
              "enum": Array [
                "data",
                "doc",
                "vis",
                "app",
              ],
              "enumNames": Array [
                "Data",
                "Documentatie",
                "Visualisatie",
                "Voorbeeldtoepassing",
              ],
            },
          },
        },
        "type": "array",
      }
    }
    setModal={[MockFunction]}
    uiResource={Object {}}
    uploadStatus="idle"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="resource-form__back"
          onClick={[Function]}
        >
          
        </button>,
        <h1
          className="resource-title"
        >
          Resource 
          toevoegen
        </h1>,
        <Form
          ErrorList={[Function]}
          className="dcatd-form resource-form"
          fields={
            Object {
              "altInput": [Function],
              "asyncTypeahead": [Function],
              "collapsible": [Function],
              "compositeArray": [Function],
              "dropdown": [Function],
              "rdp": [Function],
              "resources": [Function],
              "rte": [Function],
              "table": [Function],
              "typeahead": [Function],
            }
          }
          formContext={
            Object {
              "setResourceSpecs": [Function],
              "setUploadStatus": [Function],
            }
          }
          formData={Object {}}
          idPrefix="resource"
          liveValidate={false}
          noHtml5Validate={true}
          noValidate={false}
          onChange={[Function]}
          onError={[Function]}
          onSubmit={[Function]}
          safeRenderCompletion={false}
          schema={
            Object {
              "default": Array [],
              "items": Object {
                "properties": Object {
                  "ams:resourceType": Object {
                    "enum": Array [
                      "data",
                      "doc",
                      "vis",
                      "app",
                    ],
                    "enumNames": Array [
                      "Data",
                      "Documentatie",
                      "Visualisatie",
                      "Voorbeeldtoepassing",
                    ],
                  },
                },
              },
              "type": "array",
            }
          }
          showErrorList={false}
          transformErrors={[Function]}
          uiSchema={Object {}}
          widgets={
            Object {
              "file": [Function],
              "markdown": [Function],
            }
          }
        >
          <div>
            <button
              className="dcatd-form-button dcatd-form-button-submit"
              type="submit"
            >
              OK en terug
            </button>
            <button
              className="dcatd-form-button dcatd-form-button-cancel"
              onClick={[Function]}
              type="button"
            >
              Annuleren
            </button>
            
            <div
              className="resource-form__disclaimer"
            >
              Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
            </div>
          </div>
        </Form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "resource-form__back",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Resource ",
            "toevoegen",
          ],
          "className": "resource-title",
        },
        "ref": null,
        "rendered": Array [
          "Resource ",
          "toevoegen",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ErrorList": [Function],
          "children": <div>
            <button
              className="dcatd-form-button dcatd-form-button-submit"
              type="submit"
            >
              OK en terug
            </button>
            <button
              className="dcatd-form-button dcatd-form-button-cancel"
              onClick={[Function]}
              type="button"
            >
              Annuleren
            </button>
            
            <div
              className="resource-form__disclaimer"
            >
              Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
            </div>
          </div>,
          "className": "dcatd-form resource-form",
          "fields": Object {
            "altInput": [Function],
            "asyncTypeahead": [Function],
            "collapsible": [Function],
            "compositeArray": [Function],
            "dropdown": [Function],
            "rdp": [Function],
            "resources": [Function],
            "rte": [Function],
            "table": [Function],
            "typeahead": [Function],
          },
          "formContext": Object {
            "setResourceSpecs": [Function],
            "setUploadStatus": [Function],
          },
          "formData": Object {},
          "idPrefix": "resource",
          "liveValidate": false,
          "noHtml5Validate": true,
          "noValidate": false,
          "onChange": [Function],
          "onError": [Function],
          "onSubmit": [Function],
          "safeRenderCompletion": false,
          "schema": Object {
            "default": Array [],
            "items": Object {
              "properties": Object {
                "ams:resourceType": Object {
                  "enum": Array [
                    "data",
                    "doc",
                    "vis",
                    "app",
                  ],
                  "enumNames": Array [
                    "Data",
                    "Documentatie",
                    "Visualisatie",
                    "Voorbeeldtoepassing",
                  ],
                },
              },
            },
            "type": "array",
          },
          "showErrorList": false,
          "transformErrors": [Function],
          "uiSchema": Object {},
          "widgets": Object {
            "file": [Function],
            "markdown": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="dcatd-form-button dcatd-form-button-submit"
                type="submit"
              >
                OK en terug
              </button>,
              <button
                className="dcatd-form-button dcatd-form-button-cancel"
                onClick={[Function]}
                type="button"
              >
                Annuleren
              </button>,
              "",
              <div
                className="resource-form__disclaimer"
              >
                Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "OK en terug",
                "className": "dcatd-form-button dcatd-form-button-submit",
                "type": "submit",
              },
              "ref": null,
              "rendered": "OK en terug",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Annuleren",
                "className": "dcatd-form-button dcatd-form-button-cancel",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Annuleren",
              "type": "button",
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.",
                "className": "resource-form__disclaimer",
              },
              "ref": null,
              "rendered": "Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.",
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="resource-form__back"
            onClick={[Function]}
          >
            
          </button>,
          <h1
            className="resource-title"
          >
            Resource 
            toevoegen
          </h1>,
          <Form
            ErrorList={[Function]}
            className="dcatd-form resource-form"
            fields={
              Object {
                "altInput": [Function],
                "asyncTypeahead": [Function],
                "collapsible": [Function],
                "compositeArray": [Function],
                "dropdown": [Function],
                "rdp": [Function],
                "resources": [Function],
                "rte": [Function],
                "table": [Function],
                "typeahead": [Function],
              }
            }
            formContext={
              Object {
                "setResourceSpecs": [Function],
                "setUploadStatus": [Function],
              }
            }
            formData={Object {}}
            idPrefix="resource"
            liveValidate={false}
            noHtml5Validate={true}
            noValidate={false}
            onChange={[Function]}
            onError={[Function]}
            onSubmit={[Function]}
            safeRenderCompletion={false}
            schema={
              Object {
                "default": Array [],
                "items": Object {
                  "properties": Object {
                    "ams:resourceType": Object {
                      "enum": Array [
                        "data",
                        "doc",
                        "vis",
                        "app",
                      ],
                      "enumNames": Array [
                        "Data",
                        "Documentatie",
                        "Visualisatie",
                        "Voorbeeldtoepassing",
                      ],
                    },
                  },
                },
                "type": "array",
              }
            }
            showErrorList={false}
            transformErrors={[Function]}
            uiSchema={Object {}}
            widgets={
              Object {
                "file": [Function],
                "markdown": [Function],
              }
            }
          >
            <div>
              <button
                className="dcatd-form-button dcatd-form-button-submit"
                type="submit"
              >
                OK en terug
              </button>
              <button
                className="dcatd-form-button dcatd-form-button-cancel"
                onClick={[Function]}
                type="button"
              >
                Annuleren
              </button>
              
              <div
                className="resource-form__disclaimer"
              >
                Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
              </div>
            </div>
          </Form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "resource-form__back",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Resource ",
              "toevoegen",
            ],
            "className": "resource-title",
          },
          "ref": null,
          "rendered": Array [
            "Resource ",
            "toevoegen",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ErrorList": [Function],
            "children": <div>
              <button
                className="dcatd-form-button dcatd-form-button-submit"
                type="submit"
              >
                OK en terug
              </button>
              <button
                className="dcatd-form-button dcatd-form-button-cancel"
                onClick={[Function]}
                type="button"
              >
                Annuleren
              </button>
              
              <div
                className="resource-form__disclaimer"
              >
                Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
              </div>
            </div>,
            "className": "dcatd-form resource-form",
            "fields": Object {
              "altInput": [Function],
              "asyncTypeahead": [Function],
              "collapsible": [Function],
              "compositeArray": [Function],
              "dropdown": [Function],
              "rdp": [Function],
              "resources": [Function],
              "rte": [Function],
              "table": [Function],
              "typeahead": [Function],
            },
            "formContext": Object {
              "setResourceSpecs": [Function],
              "setUploadStatus": [Function],
            },
            "formData": Object {},
            "idPrefix": "resource",
            "liveValidate": false,
            "noHtml5Validate": true,
            "noValidate": false,
            "onChange": [Function],
            "onError": [Function],
            "onSubmit": [Function],
            "safeRenderCompletion": false,
            "schema": Object {
              "default": Array [],
              "items": Object {
                "properties": Object {
                  "ams:resourceType": Object {
                    "enum": Array [
                      "data",
                      "doc",
                      "vis",
                      "app",
                    ],
                    "enumNames": Array [
                      "Data",
                      "Documentatie",
                      "Visualisatie",
                      "Voorbeeldtoepassing",
                    ],
                  },
                },
              },
              "type": "array",
            },
            "showErrorList": false,
            "transformErrors": [Function],
            "uiSchema": Object {},
            "widgets": Object {
              "file": [Function],
              "markdown": [Function],
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="dcatd-form-button dcatd-form-button-submit"
                  type="submit"
                >
                  OK en terug
                </button>,
                <button
                  className="dcatd-form-button dcatd-form-button-cancel"
                  onClick={[Function]}
                  type="button"
                >
                  Annuleren
                </button>,
                "",
                <div
                  className="resource-form__disclaimer"
                >
                  Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "OK en terug",
                  "className": "dcatd-form-button dcatd-form-button-submit",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "OK en terug",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Annuleren",
                  "className": "dcatd-form-button dcatd-form-button-cancel",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Annuleren",
                "type": "button",
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.",
                  "className": "resource-form__disclaimer",
                },
                "ref": null,
                "rendered": "Let op: na het klikken op OK is de resource nog niet opgeslagen. Pas tijdens het opslaan van de dataset wordt ook de resource opgeslagen.",
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
